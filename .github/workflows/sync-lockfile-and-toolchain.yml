name: sync-lockfile-and-toolchain
run-name: Sync lockfile and toolchain with eclipse-zenoh/zenoh's
# TODO(fuzzypixelz): use a repository_dispatch or a workflow_dispatch event
# created by a workflow in from eclipse-zenoh/zenoh using the REST API to run
# this workflow only when necessary (i.e. when zenoh's lockfile or toolchain
# file change). However, that requires a GitHub Personal Access Token from
# eclipse-zenoh.
# on:
#   schedule:
#     - cron: "0 0 * * *" # At the end of every day
on: push
jobs:
  sync-lockfile-and-toolchain:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout this repository
        uses: actions/checkout@v4
      - name: Override rust-toolchain.toml with eclipse-zenoh/zenoh's
        # This should be done before we install the toolchain
        run: curl https://raw.githubusercontent.com/eclipse-zenoh/zenoh/master/rust-toolchain.toml --output rust-toolchain.toml
      - name: Install Rust toolchain
        # Showing the active Rust toolchain (defined by the rust-toolchain.toml file)
        # will have the side effect of installing it; if it's not installed already.
        run: rustup show
      - name: Override Cargo.lock with eclipse-zenoh/zenoh's
        run: curl https://raw.githubusercontent.com/eclipse-zenoh/zenoh/master/Cargo.lock --output Cargo.lock
      - name: Fixup Cargo.lock
        # Checking the package for errors will rectify the Cargo.lock while preserving
        # the dependency specifications fetched from eclipse-zenoh/zenoh.
        run: cargo check
      - name: Create/Update a pull request if Cargo.lock or rust-toolchain.toml changed
        uses: peter-evans/create-pull-request@v5
        with:
          commit-message: Sync Cargo.lock and/or rust-toolchain.toml with eclipse-zenoh/zenoh's
          branch: automated/sync-cargo-lock
          delete-branch: true
          title: Sync Cargo.lock and/or rust-toolchain.toml with eclipse-zenoh/zenoh's
          body: |
            Automated synchronization of Cargo.lock and/or rust-toolchain.toml with eclipse-zenoh/zenoh.
            This is necessary for plugin ABI compatibility.
